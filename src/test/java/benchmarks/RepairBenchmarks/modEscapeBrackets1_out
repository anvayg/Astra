Running benchmark
Original size of transitions: 3
Bad transitions: 2
modEscapeBrackets1 statistics:
States in source: 2
States in target: 6
Transitions in source: 16
Transitions in target: 16
Transitions in sourceFinite: 16
Transitions in targetFinite: 36
Size of alphabet: 8
Number of examples: 4
SFT1 solving time: 595
SFT2 solving time: 643
First SFT:
digraph {
0 [label="0"];
0 -> 0 [label="[;]/
x -> "];
0 -> 0 [label="[&]/
x -> "];
0 -> 0 [label="[>]/
x -> x + -24x + 41x + 54x + -3"];
0 -> 0 [label="[g]/
x -> "];
0 -> 0 [label="[t]/
x -> "];
0 -> 0 [label="[l]/
x -> "];
0 -> 0 [label="[\u0000-%\'-:=?-fh-km-su-\uffff]/
x -> "];
0 -> 0 [label="[<]/
x -> x + -22x + 48x + 56x + -1"];
}
First SFT restricted:
digraph {
0 [label="0"];
1 [label="1", peripheries = 2];
0 -> 1 [label="[g]/
x -> "];
0 -> 0 [label="[>]/
x -> x + -24x + 41x + 54x + -3"];
0 -> 1 [label="[\u0000-%\'-:=?-fh-km-su-\uffff]/
x -> "];
0 -> 1 [label="[;]/
x -> "];
0 -> 1 [label="[l]/
x -> "];
0 -> 1 [label="[<]/
x -> x + -22x + 48x + 56x + -1"];
0 -> 1 [label="[&]/
x -> "];
0 -> 1 [label="[t]/
x -> "];
1 -> 1 [label="[;]/
x -> "];
1 -> 1 [label="[>]/
x -> x + -24x + 41x + 54x + -3"];
1 -> 1 [label="[&]/
x -> "];
1 -> 1 [label="[g]/
x -> "];
1 -> 1 [label="[t]/
x -> "];
1 -> 1 [label="[\u0000-%\'-:=?-fh-km-su-\uffff]/
x -> "];
1 -> 1 [label="[l]/
x -> "];
1 -> 1 [label="[<]/
x -> x + -22x + 48x + 56x + -1"];
}
Synthesis time: 786
Equivalent results

SFTrepair1:
digraph {
0 [label="0", peripheries = 2];
1 [label="1"];
2 [label="2"];
3 [label="3", peripheries = 2];
0 -> 0 [label="[>]/
x -> &gt;"];
1 -> 0 [label="[>]/
x -> &gt;"];
1 -> 2 [label="[>]/
x -> x + -24x + 41x + 54x + -3"];
1 -> 3 [label="[t]/
x -> "];
1 -> 3 [label="[;]/
x -> "];
1 -> 3 [label="[&]/
x -> "];
1 -> 3 [label="[l]/
x -> "];
1 -> 3 [label="[g]/
x -> "];
1 -> 3 [label="[\u0000-%\'-:=?-fh-km-su-\uffff]/
x -> "];
1 -> 3 [label="[<]/
x -> x + -22x + 48x + 56x + -1"];
2 -> 3 [label="[;]/
x -> "];
2 -> 3 [label="[\u0000-%\'-:=?-fh-km-su-\uffff]/
x -> "];
2 -> 3 [label="[g]/
x -> "];
2 -> 2 [label="[>]/
x -> x + -24x + 41x + 54x + -3"];
2 -> 3 [label="[t]/
x -> "];
2 -> 3 [label="[l]/
x -> "];
2 -> 3 [label="[<]/
x -> x + -22x + 48x + 56x + -1"];
2 -> 3 [label="[&]/
x -> "];
3 -> 3 [label="[;]/
x -> "];
3 -> 3 [label="[<]/
x -> x + -22x + 48x + 56x + -1"];
3 -> 3 [label="[\u0000-%\'-:=?-fh-km-su-\uffff]/
x -> "];
3 -> 3 [label="[l]/
x -> "];
3 -> 3 [label="[>]/
x -> x + -24x + 41x + 54x + -3"];
3 -> 3 [label="[&]/
x -> "];
3 -> 3 [label="[t]/
x -> "];
3 -> 3 [label="[g]/
x -> "];
}