Running benchmark
Original size of transitions: 30
Bad transitions: 12
modExtrAcronym2 statistics:
States in source: 11
States in target: 3
Transitions in source: 30
Transitions in target: 3
Transitions in sourceFinite: 30
Transitions in targetFinite: 3
Size of alphabet: 3
Number of examples: 6
Number of bad transitions localized: 12
SFT1 solving time: 7707
SFT2 solving time: 7290
First SFT:
digraph {
0 [label="0"];
1 [label="1"];
2 [label="2"];
3 [label="3"];
4 [label="4"];
5 [label="5"];
6 [label="6"];
7 [label="7"];
8 [label="8"];
9 [label="9"];
10 [label="10"];
0 -> 2 [label="[A-Z]/
x -> x + 0"];
0 -> 1 [label="[a-z]/
x -> x + -32"];
1 -> 4 [label="[ ]/
x -> "];
1 -> 5 [label="[A-Z]/
x -> "];
1 -> 3 [label="[a-z]/
x -> "];
2 -> 6 [label="[ ]/
x -> "];
2 -> 3 [label="[a-z]/
x -> "];
2 -> 3 [label="[A-Z]/
x -> "];
3 -> 3 [label="[a-z]/
x -> "];
3 -> 5 [label="[A-Z]/
x -> x + 0"];
3 -> 4 [label="[ ]/
x -> "];
4 -> 7 [label="[a-z]/
x -> x + -32"];
4 -> 7 [label="[A-Z]/
x -> x + 0"];
5 -> 3 [label="[A-Z]/
x -> "];
5 -> 6 [label="[ ]/
x -> "];
5 -> 3 [label="[a-z]/
x -> "];
6 -> 7 [label="[a-z]/
x -> "];
6 -> 8 [label="[A-Z]/
x -> x + 0"];
7 -> 10 [label="[A-Z]/
x -> x + 0"];
7 -> 4 [label="[ ]/
x -> "];
7 -> 9 [label="[a-z]/
x -> "];
8 -> 6 [label="[ ]/
x -> "];
8 -> 9 [label="[a-z]/
x -> "];
8 -> 9 [label="[A-Z]/
x -> "];
9 -> 9 [label="[a-z]/
x -> "];
9 -> 4 [label="[ ]/
x -> "];
9 -> 10 [label="[A-Z]/
x -> "];
10 -> 9 [label="[A-Z]/
x -> x + 0"];
10 -> 9 [label="[a-z]/
x -> x + -32"];
10 -> 6 [label="[ ]/
x -> "];
}
First SFT restricted:
digraph {
0 [label="0"];
1 [label="1", peripheries = 2];
2 [label="2", peripheries = 2];
3 [label="3"];
4 [label="4", peripheries = 2];
5 [label="5"];
6 [label="6", peripheries = 2];
7 [label="7", peripheries = 2];
8 [label="8", peripheries = 2];
9 [label="9", peripheries = 2];
10 [label="10", peripheries = 2];
0 -> 1 [label="[A-Z]/
x -> x + 0"];
0 -> 2 [label="[a-z]/
x -> x + -32"];
1 -> 4 [label="[A-Z]/
x -> "];
1 -> 3 [label="[ ]/
x -> "];
1 -> 4 [label="[a-z]/
x -> "];
2 -> 4 [label="[a-z]/
x -> "];
2 -> 5 [label="[ ]/
x -> "];
2 -> 6 [label="[A-Z]/
x -> "];
3 -> 7 [label="[a-z]/
x -> "];
3 -> 8 [label="[A-Z]/
x -> x + 0"];
4 -> 4 [label="[a-z]/
x -> "];
4 -> 5 [label="[ ]/
x -> "];
4 -> 6 [label="[A-Z]/
x -> x + 0"];
5 -> 7 [label="[a-z]/
x -> x + -32"];
5 -> 7 [label="[A-Z]/
x -> x + 0"];
6 -> 4 [label="[a-z]/
x -> "];
6 -> 4 [label="[A-Z]/
x -> "];
6 -> 3 [label="[ ]/
x -> "];
7 -> 10 [label="[a-z]/
x -> "];
7 -> 5 [label="[ ]/
x -> "];
7 -> 9 [label="[A-Z]/
x -> x + 0"];
8 -> 3 [label="[ ]/
x -> "];
8 -> 10 [label="[a-z]/
x -> "];
8 -> 10 [label="[A-Z]/
x -> "];
9 -> 10 [label="[A-Z]/
x -> x + 0"];
9 -> 3 [label="[ ]/
x -> "];
9 -> 10 [label="[a-z]/
x -> x + -32"];
10 -> 9 [label="[A-Z]/
x -> "];
10 -> 5 [label="[ ]/
x -> "];
10 -> 10 [label="[a-z]/
x -> "];
}
Synthesis time: 41417
Second SFT:
digraph {
0 [label="0"];
1 [label="1"];
2 [label="2"];
3 [label="3"];
4 [label="4"];
5 [label="5"];
6 [label="6"];
7 [label="7"];
8 [label="8"];
9 [label="9"];
10 [label="10"];
0 -> 1 [label="[a-z]/
x -> x + -32"];
0 -> 2 [label="[A-Z]/
x -> x + 0"];
1 -> 4 [label="[ ]/
x -> "];
1 -> 5 [label="[A-Z]/
x -> "];
1 -> 3 [label="[a-z]/
x -> "];
2 -> 3 [label="[A-Z]/
x -> "];
2 -> 3 [label="[a-z]/
x -> "];
2 -> 6 [label="[ ]/
x -> "];
3 -> 5 [label="[A-Z]/
x -> x + 0"];
3 -> 3 [label="[a-z]/
x -> "];
3 -> 4 [label="[ ]/
x -> "];
4 -> 7 [label="[A-Z]/
x -> x + 0"];
4 -> 7 [label="[a-z]/
x -> x + -32"];
5 -> 3 [label="[A-Z]/
x -> "];
5 -> 6 [label="[ ]/
x -> "];
5 -> 3 [label="[a-z]/
x -> "];
6 -> 8 [label="[A-Z]/
x -> x + 0"];
6 -> 7 [label="[a-z]/
x -> x + -32"];
7 -> 10 [label="[A-Z]/
x -> x + 0"];
7 -> 4 [label="[ ]/
x -> "];
7 -> 9 [label="[a-z]/
x -> "];
8 -> 6 [label="[ ]/
x -> "];
8 -> 9 [label="[A-Z]/
x -> "];
8 -> 9 [label="[a-z]/
x -> "];
9 -> 9 [label="[a-z]/
x -> "];
9 -> 4 [label="[ ]/
x -> "];
9 -> 10 [label="[A-Z]/
x -> x + 0"];
10 -> 9 [label="[A-Z]/
x -> x + 0"];
10 -> 6 [label="[ ]/
x -> "];
10 -> 9 [label="[a-z]/
x -> "];
}
Second SFT restricted:
digraph {
0 [label="0"];
1 [label="1", peripheries = 2];
2 [label="2", peripheries = 2];
3 [label="3"];
4 [label="4", peripheries = 2];
5 [label="5", peripheries = 2];
6 [label="6"];
7 [label="7", peripheries = 2];
8 [label="8", peripheries = 2];
9 [label="9", peripheries = 2];
10 [label="10", peripheries = 2];
0 -> 1 [label="[a-z]/
x -> x + -32"];
0 -> 2 [label="[A-Z]/
x -> x + 0"];
1 -> 3 [label="[ ]/
x -> "];
1 -> 5 [label="[a-z]/
x -> "];
1 -> 4 [label="[A-Z]/
x -> "];
2 -> 5 [label="[a-z]/
x -> "];
2 -> 5 [label="[A-Z]/
x -> "];
2 -> 6 [label="[ ]/
x -> "];
3 -> 7 [label="[a-z]/
x -> x + -32"];
3 -> 7 [label="[A-Z]/
x -> x + 0"];
4 -> 5 [label="[A-Z]/
x -> "];
4 -> 6 [label="[ ]/
x -> "];
4 -> 5 [label="[a-z]/
x -> "];
5 -> 3 [label="[ ]/
x -> "];
5 -> 4 [label="[A-Z]/
x -> x + 0"];
5 -> 5 [label="[a-z]/
x -> "];
6 -> 8 [label="[A-Z]/
x -> x + 0"];
6 -> 7 [label="[a-z]/
x -> x + -32"];
7 -> 10 [label="[a-z]/
x -> "];
7 -> 9 [label="[A-Z]/
x -> x + 0"];
7 -> 3 [label="[ ]/
x -> "];
8 -> 6 [label="[ ]/
x -> "];
8 -> 10 [label="[a-z]/
x -> "];
8 -> 10 [label="[A-Z]/
x -> "];
9 -> 6 [label="[ ]/
x -> "];
9 -> 10 [label="[A-Z]/
x -> x + 0"];
9 -> 10 [label="[a-z]/
x -> "];
10 -> 10 [label="[a-z]/
x -> "];
10 -> 9 [label="[A-Z]/
x -> x + 0"];
10 -> 3 [label="[ ]/
x -> "];
}
Synthesis time: 42544
Input on which SFTs differ: O v
Output1: O
Output2: OV


